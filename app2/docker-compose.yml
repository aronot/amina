version: '2.3'

x-lagoon-project:
  # Lagoon project name (leave `&lagoon-project` when you edit this)
  &lagoon-project drupal-example

x-volumes:
  &default-volumes
    # Define all volumes you would like to have real-time mounted into the docker containers
    volumes:
      - .:/app_:delegated

x-environment:
  &default-environment
    LAGOON_PROJECT: *lagoon-project

x-user:
  &default-user
    # The default user under which the containers should run. Change this if you are on linux and run with another user than id `1000`
    user: '1000'

services:

  cli: # cli container, will be used for executing composer and any local commands (drush, drupal, etc.)
    build:
      context: .
      dockerfile: cl1.dockerfile
    image: *lagoon-project # this image will be reused as `CLI_IMAGE` in subsequent Docker builds
    << : *default-volumes # loads the defined volumes from the top
    user: root
    volumes_from: # mount the ssh-agent from the pygmy or cachalot ssh-agent
      - container:amazeeio-ssh-agent
    environment:
      << : *default-environment # loads the defined environment variables from the top

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
      args:
        CLI_IMAGE: *lagoon-project # Inject the name of the cli image
    << : *default-volumes # loads the defined volumes from the top
    << : *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    ports:
        - 8080:8080
    environment:
      << : *default-environment # loads the defined environment variables from the top

  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        CLI_IMAGE: *lagoon-project
    << : *default-volumes # loads the defined volumes from the top
    << : *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top


  mariadb:
    image: amazeio/mariadb-drupal
    ports:
      - "3306" # exposes the port 3306 with a random local port, find it with `docker-compose port mariadb 3306`
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment
